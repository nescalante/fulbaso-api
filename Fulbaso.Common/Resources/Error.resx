<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AjaxTransformAttributeDecoration" xml:space="preserve">
    <value>AjaxTransformActionResultAttribute must decorate a method or class that inherits from BaseController.</value>
  </data>
  <data name="AuthenticationError" xml:space="preserve">
    <value>Authentication attempt failed for user {0}.</value>
    <comment>0=display name</comment>
  </data>
  <data name="CommitOnFileSystemRepository" xml:space="preserve">
    <value>Commits on a file system repository are unnecessary because everything is committed immediatly. Transactional operations are not implemented on file system repositories.</value>
  </data>
  <data name="ControllerBaseTypeMismatch" xml:space="preserve">
    <value>Controllers must inherit from BaseController base type.</value>
  </data>
  <data name="ControllerNotFound" xml:space="preserve">
    <value>The controller for path '{0}' could not be found.</value>
  </data>
  <data name="DuplicatePropertyInjection" xml:space="preserve">
    <value>Property '{0}' has already been injected. </value>
    <comment>0=property name</comment>
  </data>
  <data name="EmptyAction" xml:space="preserve">
    <value>(none)</value>
  </data>
  <data name="EmptyController" xml:space="preserve">
    <value>(none)</value>
  </data>
  <data name="EnumRouteConstraint" xml:space="preserve">
    <value>Type {0} doesn't subclass System.Enum</value>
    <comment>0=type</comment>
  </data>
  <data name="FacebookApiException" xml:space="preserve">
    <value>There was an error accessing the Facebook Graph API.</value>
  </data>
  <data name="FatalException" xml:space="preserve">
    <value>A fatal exception has occurred.</value>
  </data>
  <data name="InvalidContext" xml:space="preserve">
    <value>HttpContext.Current is not set, and required for this operation.</value>
  </data>
  <data name="MailSendError" xml:space="preserve">
    <value>An exception has occurred when attempting to send a mail message over the network.</value>
  </data>
  <data name="MisconfiguredMembershipProvider" xml:space="preserve">
    <value>Please configure a membership provider for {0}.</value>
    <comment>0=name</comment>
  </data>
  <data name="MisconfiguredRoleProvider" xml:space="preserve">
    <value>Please configure a role provider for {0}.</value>
    <comment>0=name</comment>
  </data>
  <data name="MissingEmailCredentials" xml:space="preserve">
    <value>An outgoing email address could not be retrieved from either the appSettings or the smtp configuration elements.</value>
  </data>
  <data name="ModelCantBeNull" xml:space="preserve">
    <value>A model was expected but null was passed to the action method.</value>
  </data>
  <data name="ModelStateIsValid" xml:space="preserve">
    <value>Attempted to return InvalidModelState result when the ModelState was actually valid.</value>
  </data>
  <data name="ModelTypeAttributeMissing" xml:space="preserve">
    <value>A required attribute ModelTypeAttribute is missing from an implementation of IModelBinder: {0}. This is required to map model binders to models.</value>
    <comment>0=model binder type</comment>
  </data>
  <data name="NoContainerAccessor" xml:space="preserve">
    <value>HttpApplication must implement IContainerAccessor in order to resolve external dependencies.</value>
  </data>
  <data name="NoContainerInitialized" xml:space="preserve">
    <value>The IContainerAccessor must be properly initialized before resolving external dependencies.</value>
  </data>
  <data name="PropertyNotInjected" xml:space="preserve">
    <value>Property '{0}' must be injected.</value>
    <comment>0=property name</comment>
  </data>
  <data name="ResourceTypeNoProperty" xml:space="preserve">
    <value>Resource Type does not have a '{0}' property.</value>
    <comment>0=resource name</comment>
  </data>
  <data name="ResourceTypeNotString" xml:space="preserve">
    <value>Resource Property '{0}' is not a string.</value>
    <comment>0=resource name</comment>
  </data>
  <data name="UnauthorizedAjaxAttempt" xml:space="preserve">
    <value>An AJAX-only action was accessed during a non-AJAX request. HTTP not found result was returned.</value>
  </data>
  <data name="UnauthorizedNonAjaxAttempt" xml:space="preserve">
    <value>A non-AJAX action was accessed during an AJAX request. HTTP not found result was returned.</value>
  </data>
  <data name="UnhandledAjaxException" xml:space="preserve">
    <value>An unhandled exception has occurred during an AJAX request.</value>
  </data>
  <data name="UnhandledChildActionException" xml:space="preserve">
    <value>An unhandled exception has occurred while rendering a child action.</value>
  </data>
  <data name="UnhandledException" xml:space="preserve">
    <value>An unhandled exception has occurred.</value>
  </data>
  <data name="WebResourceNotFound" xml:space="preserve">
    <value>The requested resource does not exist on the server.</value>
  </data>
</root>