@using Fulbaso.Web
@using Fulbaso.Common
@using Fulbaso.Contract
@using SquishIt.Framework.Minifiers.JavaScript
@using SquishIt.Framework.Minifiers.CSS
@using SquishIt.Mvc

@{
    if (ViewBag.Title == null)
    {
        ViewBag.Title = ViewBag.FormTitle == null ? (Configuration.AppTitle + " - Canchas de fútbol") : ViewBag.FormTitle;
    }
    
    if (ViewBag.FormTitle == null)
    {
        ViewBag.FormTitle = ViewBag.Title;
    }

    var places = CoreUtil.GetPlaces(User);
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="DESCRIPTION" content="@(Configuration.AppTitle), Canchas de fútbol" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    @RenderSection("Metadata", false)
    <title>@ViewBag.Title</title>
    @RenderSection("StyleSheets", false)
    <link href='http://fonts.googleapis.com/css?family=Ubuntu:400,500,700' rel='stylesheet' type='text/css'>
    <link rel="Shortcut Icon" href="@Url.Content("~/img/sport_soccer.png")" />
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="Stylesheet" />
    <link href="@Url.Content("~/Content/bootstrap-responsive.min.css")" rel="Stylesheet" />
    <link href="@Url.Content("~/css/base/jquery.ui.all.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/css/site.css")" rel="stylesheet" type="text/css" />
</head>
<body data-spy="scroll" data-target=".subnav" data-offset="140" data-twttr-rendered="true" style="padding: 140px 10px 40px;">
    <div id="fb-root"></div>
    <div class="navbar navbar-fixed-top">
        <div class="frontnav" style="height: 90px; width: 100%; background: white;">
        <div class="container">
            <div class="row">
                <div class="span12">
                    <div style="padding-left: 30px;">
                        <a href="@Url.Action("Index", "Home")" title="@Configuration.AppTitle"><img src="@Url.Content("~/img/frontnav.png")" style="display:block; height:90px" title="@Configuration.AppTitle"/></a>
                    </div>
                </div>
            </div>
        </div>
        </div>
        <div class="navbar-inner">
            <div class="container">
                <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </a>
                @Html.ActionLink("¡" + Configuration.AppTitle + "!", "Index", "Home", null, new { @class = "brand" })
                <div class="nav-collapse">
                    <ul class="nav">
                        <li class="@(ViewContext.CheckRoute("Index", "Home") && ViewContext.HttpContext.Request["q"] != "*" ? "active" : "")">@Html.ActionLink("Home", "Index", "Home")</li>
                        <li class="@(ViewContext.CheckRoute("Advanced", "Search") || ViewContext.CheckRoute("Schedule", "Search")? "active" : "")">@Html.ActionLink("Buscar", "Advanced", "Search", null, new { title = "Buscar canchas" })</li>
                        <li class="@(ViewContext.CheckRoute("Index", "Home") && ViewContext.HttpContext.Request["q"] == "*" ? "active" : "")">@Html.ActionLink("Canchas", "Index", "Home", new { q = "*" }, new { title = "Listado de canchas", @class = "search-link", })</li>
                        <li class="@(ViewContext.CheckRoute("Map", "Place") ? "active" : "")">@Html.ActionLink("Mapa", "Map", "Place", null, new { title = "Mapa de canchas" })</li>
                        @if (places != null && places.Count > 1)
                        {
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown">Complejos<b class="caret"></b></a>
                                <ul class="dropdown-menu">
                                    @foreach (var p in places)
                                    {
                                        <li>@Html.ActionLink((string)p.Description, "Admin", "Home", new { place = p.Page }, null)</li>
                                    }
                                </ul>
                            </li>
                        }
                        else if (places != null && places.Count == 1)
                        {
                            <li>@Html.ActionLink(places.First().Description, "Admin", "Home", new { place = places.First().Page }, null)</li>
                        }
                    </ul>
                    @if (!(ViewContext.CheckRoute("Index", "Home") && Request.QueryString.Count == 0))
                    {
                        using (Html.BeginForm("Index", "Home", FormMethod.Post, new { @class = "navbar-search pull-left", }))
                        {
                            <input id="searchtext" name="searchtext" type="text" autocomplete="off" class="search-query span2" placeholder="Buscar" value="@ViewBag.Query" />
                        }
                    }
                    @Html.Partial("_LogOnPartial")
                </div>
            </div>
        </div>
    </div>
    @if (IsSectionDefined("Header"))
    {
        <div class="container">
            @RenderSection("Header", false)
        </div>
    }
    <section id="main">
        <div class="container">
            @RenderBody()
        </div>
    </section>
    <footer>
    </footer>
    <script src="@Url.Content("~/Scripts/jquery-1.7.2.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui-1.8.22.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/bootstrap.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/bootstrap.autocomplete.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/f.js")" type="text/javascript"></script>
    @*@(SquishIt.Framework.Bundle.JavaScript().Add("~/Scripts/f.js").WithMinifier<YuiMinifier>().MvcRender("~/all.js"))*@
    <script>(function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (d.getElementById(id)) return; js = d.createElement(s); js.id = id; js.src = "//connect.facebook.net/es_LA/all.js#xfbml=1&appId=@Configuration.AppId"; fjs.parentNode.insertBefore(js, fjs); } (document, 'script', 'facebook-jssdk'));</script>
    @RenderSection("Scripts", false)
    <script>
        $(function () {
            var cache = {}, lastReq;
            $("#searchtext").typeahead({
                source: function (typeahead, query) {
                    var term = query;
                    if (term in cache) {
                        typeahead.process(cache[term]);
                        return;
                    }
                    lastReq = $.getJSON('@Url.Action("Find", "Home")', { term: query }, function (data, status, req) {
                        cache[term] = data;
                        if (req === lastReq) {
                            typeahead.process(data);
                        }
                    });
                },
                onselect: function (item) {
                    window.location = "@Url.Action("Index", "Home")" + "?q=" + item.value;
                }
            });

            var loginclicked = false;
            var logged = false;

            window.fbAsyncInit = function () {
                FB.init({ appId: '@Configuration.AppId', channelUrl: '//' + window.location.hostname + '/channel', status: true, cookie: true, xfbml: true });
                FB.Event.subscribe('auth.statusChange', function (response) {
                    if (response.authResponse) {
                        FB.api('/me', function (me) {
                            if (loginclicked) {
                                $("#token").val(response.authResponse.accessToken);
                                $("#loginform").submit();
                            }
                            else {
                                $.post("@Url.Action("Login", "Home")", { token: response.authResponse.accessToken }, function () { 
                                    if (loginclicked) {
                                        $("#loginform").submit();
                                    }
                                    $("#token").val(response.authResponse.accessToken);
                                });
                            }
                        })
                    }
                });
            }

            $("#logout").click(function () {
                FB.logout();
            });
     
            // respond to clicks on the login and logout links
            $("#facebooklogin").click(function () {
                FB.getLoginStatus(function(response) {
                    if (response.status === 'connected') {
                        loginclicked = false;

                        $("#token").val(response.authResponse.accessToken);
                        $("#loginform").submit();
                    }
                });

                loginclicked = true;
                FB.login();
            });
        });
     </script>
</body>
</html>
