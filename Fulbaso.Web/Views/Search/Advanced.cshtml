@using Fulbaso.Contract
@using Fulbaso.Web
@using Fulbaso.Common

@{
    ViewBag.Title = "Búsqueda avanzada";
}

@section Header
{
    <div class="page-header">
        <h2>
            Búsqueda avanzada
        </h2>
    </div>
}

@using (Html.BeginForm("Advanced", "Search", FormMethod.Post, new { @class = "form-horizontal" }))
{
    <fieldset>
        <div class="control-group">
            <label class="control-label" for="searchlocation">Ubicación</label>
            <div class="controls">
                @Html.TextBox("searchlocation", "", new { @class = "input-xlarge", autocomplete = "off" })
                <span class="help-inline">Escribí los lugares donde quieras buscar separados por coma.</span>
            </div>
        </div>
        <div class="control-group">
            <label class="control-label" for="players">Cantidad de jugadores</label>
            <div class="controls">
                <label class="checkbox inline">
                    @Html.CheckBox("player-5") 5
                </label>
                <label class="checkbox inline">
                    @Html.CheckBox("player-6") 6
                </label>
                <label class="checkbox inline">
                    @Html.CheckBox("player-7") 7
                </label>
                <label class="checkbox inline">
                    @Html.CheckBox("player-8") 8
                </label>
                <label class="checkbox inline">
                    @Html.CheckBox("player-9") 9
                </label>
                <label class="checkbox inline">
                    @Html.CheckBox("player-10") 10
                </label>
                <label class="checkbox inline">
                    @Html.CheckBox("player-11") 11
                </label>
            </div>
        </div>
        <div class="control-group">
            <label class="control-label" for="floors">Suelo</label>
            <div class="controls">
                @foreach (var f in (IEnumerable<Fulbaso.Helpers.EntityDataObject>)ViewBag.FloorTypes)
                {
                    <label class="checkbox">
                        @Html.CheckBox("floor-" + f.Id)
                        @f
                    </label>
                }
            </div>
        </div>
        <div class="control-group">
            <label class="control-label" for="moreoptions">Otros</label>
            <div class="controls">
                @foreach (var s in Enum.GetValues(typeof(Service)).Cast<Service>())
                {
                    <label class="checkbox">
                        <input type="checkbox" id="@s" name="@s" />
                        @s.GetDescription()
                    </label>
                }
                <label class="checkbox">
                    @Html.CheckBox("indoor")
                    Techadas
                </label>
                <label class="checkbox">
                    @Html.CheckBox("lighted")
                    Iluminadas
                </label>
            </div>
        </div>
        <div style="display: none;">
            <div class="control-group showschedule">
                <div class="controls">
                    <a id="showscheduleoption" class="btn">Buscar por disponibilidad</a>
                    <span class="label label-warning">Advertencia</span><span class="help-inline">Si busca por disponibilidad sólo se listaran las canchas que dispongan de esta opción.</span>
                </div>
            </div>
            <div class="control-group schedule">
                <label class="control-label" for="date">Sólo canchas disponibles el día</label>
                <div class="controls">
                    @Html.TextBox("date", DateTime.Now.ToShortDateString(), new { autocomplete = "off", @class = "span2" })
                </div>
            </div>
            <div class="control-group schedule">
                <label class="control-label" for="hour">A las</label>
                <div class="controls">
                    @Html.DropDownList("hour", new SelectList(Enumerable.Range(0, 24).Select(e => new { Id = e, Text = e + " hs" }).ToList(), "Id", "Text"), "[Seleccione]", new { @class = "span2", })
                </div>
            </div>
        </div>
        <div class="form-actions">
            <button type="submit" class="btn btn-primary">Buscar</button>
        </div>
    </fieldset> 
}

@section StyleSheets
{
    <style>
        #label-tags span { margin: 2px; cursor: pointer; }
        #label-tags { margin: 10px 0; }
        .schedule { display:none; }
    </style>
}

@section Scripts
{
    <script src="@Url.Content("~/Scripts/jquery-ui-datepicker-es.js")" type="text/javascript"></script>
    <script>
        $.datepicker.setDefaults($.datepicker.regional["es"]);
        $(function () {
            $("#showscheduleoption").click(function () {
                $(".schedule").fadeIn();
                $(".showschedule").hide();
            });

            $("#date").datepicker();
            var cache = {}, lastReq;
            var locations;
            $("#searchlocation").typeahead({
                source: function (typeahead, query) {
                    var list = query.split(",");
                    var term = $.trim(list[list.length - 1]);
                    locations = $("#searchlocation").val();

                    if (term in cache) {
                        typeahead.process(cache[term]);
                        return;
                    }

                    lastReq = $.getJSON('@Url.Action("FindLocation", "Search")', { term: term }, function (data, status, req) {
                        cache[term] = data;
                        if (req === lastReq) {
                            typeahead.process(data);
                        }
                    });
                },
                onselect: function (item) {
                    var recalculate = (locations.lastIndexOf(",") > -1 ? locations.substring(0, locations.lastIndexOf(",")) + ", " : "") + item.value;
                    var array = recalculate.split(",");
                    $.each(array, function (key, value) { array[key] = $.trim(value); });
                    $("#searchlocation").val(array.join(", ") + ", ");
                    $("#searchlocation").focus();
                }
            });
        });
    </script>
}