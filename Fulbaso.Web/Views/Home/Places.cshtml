@using Fulbaso.Contract
@using Fulbaso.Web

@model IEnumerable<Place>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    
    var filter = new PlacesFilter(this.Request.QueryString);
}

<div class="container">
    <div class="row">
        <div class="span8">
            <div style="padding: 0.2em 0px;">
                <p class="visible-phone"><span class="@(ViewBag.Places > 0 ? "badge badge-success" : "badge badge-error")">@ViewBag.Places</span> complejos encontrados@(filter.ToString() != "" ? " " + filter.ToString() : "").</p>
                <p class="hidden-phone"><span class="@(ViewBag.Places > 0 ? "badge badge-success" : "badge badge-error")">@ViewBag.Places</span> complejos encontrados.</p>
                @if (filter.IsAdvanced)
                {
                    <p>Haga click @Html.ActionLink("aquí", "Advanced", "Search") para realizar una nueva búsqueda.</p>
                }
            </div>
            <div id="places">
                @Html.Partial("List", Model)
            </div>
            <a id="loadmore" class="btn btn-primary" style="margin-left: 20px; width: 16em;">Mostrar más</a>
        </div>
        <div class="span4">
            <div class="hidden-phone">
                <h3>Búsqueda rápida</h3>
                <h4>Jugadores</h4>
                <ul class="nav nav-pills">
                    @foreach (var p in new [] { 5, 6, 7, 8, 9, 10, 11 })
                    {
                        if (filter.Players.Contains((byte)p))
                        {
                            <li class="active"><a href="@Url.Action("Index", "Home", filter.WithoutPlayerOption(p).Route)">@p</a></li>
                        }
                        else
                        {
                            <li><a href="@Url.Action("Index", "Home", filter.WithPlayerOption(p).Route)">@p</a></li>
                        }
                    }
                </ul>
                <h4>Tipo de suelo</h4>
                <ul class="nav nav-pills">

                    @foreach (var f in (IEnumerable<Fulbaso.Helpers.EntityDataObject>)ViewBag.FloorTypes)
                    {
                        if (filter.FloorTypes.Contains(f.Id))
                        {
                            <li class="active"><a href="@Url.Action("Index", "Home", filter.WithoutFloorType(f.Id).Route)">@f</a></li>
                        }
                        else
                        {
                            <li><a href="@Url.Action("Index", "Home", filter.WithFloorType(f.Id).Route)">@f</a></li>
                        }
                    }
                </ul>
                <h4>Características</h4>
                <ul class="nav nav-pills">
                    @foreach (var s in Enum.GetValues(typeof(Service)).Cast<Service>())
                    {
                        if (filter.Tags.Contains((byte)s))
                        {
                            <li class="active"><a href="@Url.Action("Index", "Home", filter.WithoutTag((byte)s).Route)">@s.GetDescription()</a></li>
                        }
                        else
                        {
                            <li><a href="@Url.Action("Index", "Home", filter.WithTag((byte)s).Route)">@s.GetDescription()</a></li>
                        }
                    }
                    <li @(filter.IsIndoor ? "class=active" : "")><a href="@Url.Action("Index", "Home", filter.WithChangedIndoor().Route)">Iluminada</a></li>
                    <li @(filter.IsLighted ? "class=active" : "")><a href="@Url.Action("Index", "Home", filter.WithChangedLighted().Route)">Techada</a></li>
                </ul>
                @if (filter.Locations.Any())
                {
                    <h4>Ubicación</h4>
                    <ul class="nav nav-pills">
                        @foreach (var l in filter.Locations)
                        {
                            <li class="active"><a href="@Url.Action("Index", "Home", filter.WithoutLocation(l).Route)">@l</a></li>
                        }
                    </ul>
                }
            </div>
        </div>
    </div>
</div>
<script>
    $(function () {
        var last, html, init;

        function loadMore() {
            if (init != last && html != null) {
                last = init;

                $("#loadmore").hide();
                $(html)
                    .hide()
                    .appendTo("#places")
                    .fadeIn();
                html = null;
            }
            
            loadHtml();
        }

        $("#loadmore").click(function () {
            loadMore();
        });

        function loadHtml() {
            if ($(".place-info").length != @ViewBag.Places)
            {
                init = $(".place-info").length;

                console.log();

                $.get("@Html.Raw(Url.Action("List", "Home", filter.Route))&init=" + init, function (data) { 
                    html = data;
                    $("#loadmore").show();

                    if ($(".place-info").length == @ViewBag.Places) {
                        $("#loadmore").hide();
                    }
                }).error(function () { $("#loadmore").hide(); });
            }
            else
            {
                $("#loadmore").hide();
            }
        }

        $(window).scroll(function () {
            if (document.documentElement.clientHeight + $(document).scrollTop() >= document.body.offsetHeight - 100) {
                loadMore();
            }
        });

        loadMore();
    });
</script>
